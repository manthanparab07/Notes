---------------------------------- Formatting Output ---------------------------

		● nl 		– Number lines
		● fold 		– Wrap each line to a specified length
		● fmt 		– A simple text formatter
		● pr 		– Prepare text for printing
		● printf 	– Format and print data
		

	1. nl 	: number line
		
		It numbers lines.
		Similar to cat -n:
		
		If no file is specified the input is taken from std input.
		
		Option						Meaning
		
		-b style 
		
			Style
			a      		number all lines

		   	t      		number only nonempty lines

		   	n      		number no lines
			p'regexp' = number only lines matching basic regular expression
						regexp.
	
	2. fold
	
		fold - wrap each input line to fit in specified width.
		
			fold [OPTION]... [FILE]...
		
		Options
		
			-s, --spaces		break at spaces

       		-w, --width=WIDTH	use WIDTH columns instead of 80
       		
       		If both are specified the line at the last available space before 
       		the line width is reached is spiltted.
	
	
	3. fmt - simple optimal text formatter


       fmt [-WIDTH] [OPTION]... [FILE]...

		Reformat  each  paragraph  in  the FILE(s), writing to standard output.
       	The option -WIDTH is an abbreviated form of --width=DIGITS.

       With no FILE, or when FILE is -, read standard input.

       
		   -c, --crown-margin
		          preserve indentation of first two lines

		   -p, --prefix=STRING
		          reformat  only lines beginning with STRING, reattaching the pre‐
		          fix to reformatted lines

		   -s, --split-only
		          split long lines, but do not refill

		   -u, --uniform-spacing
		          one space between words, two after sentences

		   -w, --width=WIDTH
		          maximum line width (default of 75 columns)

	4. printf
	
		format and print data
		
			printf FORMAT [ARGUMENT]...
		   	printf OPTION
	
		Similar as C function
		
			printf "Hello World !! " 
		
		It does not accept standard input










